[
    {
        "id": "92533aa3038c1e4a",
        "type": "tab",
        "label": "Lab1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "1b9c1dafa5e22344",
        "type": "tab",
        "label": "Lab2",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "d4d8ee4fd8339b93",
        "type": "tab",
        "label": "Lab2.2",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "eeb71a8241dafe88",
        "type": "tab",
        "label": "Lab3",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "7e8c6afd411b87b7",
        "type": "tab",
        "label": "Lab3.2",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "e06d740db386372e",
        "type": "tab",
        "label": "Lab4",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "8756f3d403a40b04",
        "type": "tab",
        "label": "Lab5",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "d6bfac57e9ae0511",
        "type": "tab",
        "label": "Lab6",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "84509d07d435e576",
        "type": "tab",
        "label": "Lab7",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "76bcc671b3a34490",
        "type": "tab",
        "label": "Ubidots_Lab7",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "760f23939087cb96",
        "type": "tab",
        "label": "Lab8 OPC UA to influxdb",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "e0bf14c2f6cbbb41",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "9070157da237643d",
        "type": "ui_tab",
        "name": "Володько Станіслав",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "81c64499b62dcbc7",
        "type": "ui_tab",
        "name": "Володько Станіслав2",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b0fe1aeee5fbf23d",
        "type": "ui_group",
        "name": "Закладка 2",
        "tab": "81c64499b62dcbc7",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ea499d3ceedbc31e",
        "type": "ui_group",
        "name": "Закладка 1",
        "tab": "9070157da237643d",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bd54b47d44b42a5c",
        "type": "mqtt-broker",
        "name": "mosquitto",
        "broker": "http://test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "80c28775dacd52dc",
        "type": "websocket-listener",
        "path": "/",
        "wholemsg": "false"
    },
    {
        "id": "f3a1a9fa2903623c",
        "type": "gauth",
        "name": "rpi-service-account@rpi3-385913.iam.gserviceaccount.com"
    },
    {
        "id": "2d94b6f010474707",
        "type": "Stackhero-InfluxDB-v2-Server",
        "name": "",
        "host": "eu-central-1-1.aws.cloud2.influxdata.com",
        "port": "443",
        "tls": true
    },
    {
        "id": "1f4c855ec4b0bc57",
        "type": "ui_tab",
        "name": "BrandMBE",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "58c48080f93563cb",
        "type": "ui_group",
        "name": "Дата",
        "tab": "1f4c855ec4b0bc57",
        "order": 1,
        "disp": true,
        "width": 15,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4a5e1c9a8f82532c",
        "type": "ui_group",
        "name": "Лояльність",
        "tab": "1f4c855ec4b0bc57",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a7487ec3dac9f9bb",
        "type": "ui_group",
        "name": "Якість",
        "tab": "1f4c855ec4b0bc57",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3ba998ed2014a277",
        "type": "ui_group",
        "name": "",
        "tab": "1f4c855ec4b0bc57",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "65c7fba358b16418",
        "type": "ui_group",
        "name": "",
        "tab": "1f4c855ec4b0bc57",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3a278ce11f9dbe3e",
        "type": "ui_group",
        "name": "Графік",
        "tab": "1f4c855ec4b0bc57",
        "order": 2,
        "disp": true,
        "width": 15,
        "collapse": false,
        "className": ""
    },
    {
        "id": "bfe8a18b184b8951",
        "type": "telegram bot",
        "botname": "https://t.me/RPI4_Lab_bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "4def1c2a99ec00dd",
        "type": "telegram bot",
        "botname": "t.me/Lab4_Zimenko_bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "174cfcf56140dded",
        "type": "telegram bot",
        "botname": "https://t.me/speresenko_lab5_bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "ceb5e8512ca93bef",
        "type": "gauth",
        "name": "rpi-service-account-69@rpi3-385913.iam.gserviceaccount.com"
    },
    {
        "id": "fcb39804f01887c9",
        "type": "s7 endpoint",
        "transport": "iso-on-tcp",
        "address": "127.0.0.1",
        "port": "102",
        "rack": "0",
        "slot": "1",
        "localtsaphi": "01",
        "localtsaplo": "00",
        "remotetsaphi": "01",
        "remotetsaplo": "00",
        "connmode": "rack-slot",
        "adapter": "",
        "busaddr": "2",
        "cycletime": "60000",
        "timeout": "2000",
        "name": "",
        "vartable": [
            {
                "addr": "DB2,R56",
                "name": "InputFEGaz"
            },
            {
                "addr": "DB2,R68",
                "name": "InputFEWater"
            },
            {
                "addr": "DB2,R4",
                "name": "InputTESteam"
            },
            {
                "addr": "DB2,R10",
                "name": "InputTESmoke"
            },
            {
                "addr": "DB2,R62",
                "name": "InputFESteam"
            }
        ]
    },
    {
        "id": "77f058b7f8dabfa6",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://DESKTOP-VERH6A8:48010",
        "secpol": "None",
        "secmode": "NONE",
        "login": false
    },
    {
        "id": "b1a17ac6171faba5",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://2017-PC:48010",
        "secpol": "None",
        "secmode": "NONE",
        "login": false
    },
    {
        "id": "2004fe318454697c",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://DESKTOP-RFV59RT:48010",
        "secpol": "None",
        "secmode": "None",
        "login": false
    },
    {
        "id": "1ba277000d88d77e",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://opcuaserver.com:48010",
        "secpol": "None",
        "secmode": "None",
        "login": false
    },
    {
        "id": "6b57973f.33e008",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://DESKTOP-IAH5H3K:48010",
        "secpol": "None",
        "secmode": "NONE",
        "login": false
    },
    {
        "id": "a0fd9d14bb4c69ce",
        "type": "OpcUa-Endpoint",
        "endpoint": "127.0.0.1:48010",
        "secpol": "None",
        "secmode": "NONE",
        "login": false
    },
    {
        "id": "29b7977e73325c8e",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://DESKTOP-VEYH6T8:48010",
        "secpol": "None",
        "secmode": "NONE",
        "login": false
    },
    {
        "id": "cb22cac59ce2c2be",
        "type": "redis-config",
        "name": "Redis",
        "options": "{\"test\":1}",
        "cluster": false,
        "optionsType": "json"
    },
    {
        "id": "a0efbb89.5e42d8",
        "type": "redis-config",
        "name": "local",
        "options": "{}",
        "cluster": false,
        "optionsType": "json"
    },
    {
        "id": "58eb1167da00805f",
        "type": "Stackhero-InfluxDB-v2-Server",
        "name": "read",
        "host": "eu-central-1-1.aws.cloud2.influxdata.com",
        "port": "443",
        "tls": true
    },
    {
        "id": "48659a7502deef5d",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "https://eu-central-1-1.aws.cloud2.influxdata.com/",
        "rejectUnauthorized": true
    },
    {
        "id": "2ff2a476.a6d2ec",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "test 1.8 flux",
        "usetls": false,
        "tls": "d50d0c9f.31e858",
        "influxdbVersion": "1.8-flux",
        "url": "https://localhost:8086",
        "rejectUnauthorized": false
    },
    {
        "id": "d50d0c9f.31e858",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "6ca8bde.9eb2f44",
        "type": "influxdb",
        "hostname": "localhost",
        "port": "8086",
        "protocol": "https",
        "database": "new_db",
        "name": "",
        "usetls": true,
        "tls": "f7f39f4e.896ae",
        "influxdbVersion": "1.x"
    },
    {
        "id": "f7f39f4e.896ae",
        "type": "tls-config",
        "name": "local-tls",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "verifyservercert": false
    },
    {
        "id": "1b645d3a82da0d5f",
        "type": "modbustcp-server",
        "name": "PLCSIM",
        "host": "127.0.0.1",
        "port": "502",
        "unit_id": "1",
        "reconnecttimeout": "1000"
    },
    {
        "id": "079ca4291efacc98",
        "type": "mqtt-broker",
        "name": "",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "volodkoClient1",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": false,
        "autoUnsubscribe": true,
        "birthTopic": "volodko/client1/status",
        "birthQos": "1",
        "birthRetain": "true",
        "birthPayload": "online",
        "birthMsg": {},
        "closeTopic": "volodko/client1/status",
        "closeQos": "1",
        "closeRetain": "true",
        "closePayload": "offline",
        "closeMsg": {},
        "willTopic": "volodko/client1/status",
        "willQos": "1",
        "willRetain": "true",
        "willPayload": "offline (break)",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "5a8244e6c7c10971",
        "type": "Stackhero-InfluxDB-v2-Server",
        "name": "",
        "host": "us-east-1-1.aws.cloud2.influxdata.com",
        "port": "443",
        "tls": true
    },
    {
        "id": "e71fb12fe992aecb",
        "type": "inject",
        "z": "92533aa3038c1e4a",
        "name": "Start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "topic 1",
        "payload": "",
        "payloadType": "date",
        "x": 350,
        "y": 220,
        "wires": [
            [
                "304784c3f043dd35",
                "835f32e2632cb646",
                "aa6f79840f701024",
                "af6f4f65364936ec",
                "1a56e142fbf3bbc0",
                "9f2f0fcb977525ea"
            ]
        ]
    },
    {
        "id": "4ea14625517ab832",
        "type": "debug",
        "z": "92533aa3038c1e4a",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 220,
        "wires": []
    },
    {
        "id": "835f32e2632cb646",
        "type": "delay",
        "z": "92533aa3038c1e4a",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 300,
        "wires": [
            [
                "7283148a77ad13e0"
            ]
        ]
    },
    {
        "id": "1a56e142fbf3bbc0",
        "type": "delay",
        "z": "92533aa3038c1e4a",
        "name": "",
        "pauseType": "delay",
        "timeout": "4",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 420,
        "wires": [
            [
                "536c39838c2073a8"
            ]
        ]
    },
    {
        "id": "af6f4f65364936ec",
        "type": "delay",
        "z": "92533aa3038c1e4a",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 380,
        "wires": [
            [
                "bd96a27f357dc6bf"
            ]
        ]
    },
    {
        "id": "aa6f79840f701024",
        "type": "delay",
        "z": "92533aa3038c1e4a",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 540,
        "y": 340,
        "wires": [
            [
                "3ec5a8615d440dcc"
            ]
        ]
    },
    {
        "id": "304784c3f043dd35",
        "type": "change",
        "z": "92533aa3038c1e4a",
        "name": "set1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Один",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 220,
        "wires": [
            [
                "4ea14625517ab832",
                "d17670f401f5d1a7"
            ]
        ]
    },
    {
        "id": "7283148a77ad13e0",
        "type": "change",
        "z": "92533aa3038c1e4a",
        "name": "set2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Два",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 300,
        "wires": [
            [
                "4ea14625517ab832",
                "d17670f401f5d1a7"
            ]
        ]
    },
    {
        "id": "3ec5a8615d440dcc",
        "type": "change",
        "z": "92533aa3038c1e4a",
        "name": "set3",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Три",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 340,
        "wires": [
            [
                "4ea14625517ab832",
                "d17670f401f5d1a7"
            ]
        ]
    },
    {
        "id": "bd96a27f357dc6bf",
        "type": "change",
        "z": "92533aa3038c1e4a",
        "name": "set4",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Чотири",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 380,
        "wires": [
            [
                "4ea14625517ab832"
            ]
        ]
    },
    {
        "id": "536c39838c2073a8",
        "type": "change",
        "z": "92533aa3038c1e4a",
        "name": "set5",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "П'ять",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 420,
        "wires": [
            [
                "4ea14625517ab832"
            ]
        ]
    },
    {
        "id": "574b116b64d2ab06",
        "type": "debug",
        "z": "92533aa3038c1e4a",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 480,
        "wires": []
    },
    {
        "id": "f6ca67de19d2f1ff",
        "type": "ui_text",
        "z": "92533aa3038c1e4a",
        "group": "ea499d3ceedbc31e",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Дата",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "x": 730,
        "y": 540,
        "wires": []
    },
    {
        "id": "d17670f401f5d1a7",
        "type": "ui_text",
        "z": "92533aa3038c1e4a",
        "group": "ea499d3ceedbc31e",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Число",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 970,
        "y": 380,
        "wires": []
    },
    {
        "id": "9f2f0fcb977525ea",
        "type": "function",
        "z": "92533aa3038c1e4a",
        "name": "ДатаЧас",
        "func": "var date1 = new Date(msg.payload);\nmsg.payload = 'Дата початку: '+date1.toLocaleString();\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 480,
        "wires": [
            [
                "574b116b64d2ab06",
                "f6ca67de19d2f1ff"
            ]
        ]
    },
    {
        "id": "3b3a8de291d7bf7c",
        "type": "inject",
        "z": "92533aa3038c1e4a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Це текстове повідомлення",
        "payloadType": "str",
        "x": 410,
        "y": 120,
        "wires": [
            [
                "9b4924b2da28b709"
            ]
        ]
    },
    {
        "id": "24ab7d21e0252574",
        "type": "debug",
        "z": "92533aa3038c1e4a",
        "name": "debug 26",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 80,
        "wires": []
    },
    {
        "id": "eb7fded7d192a4c8",
        "type": "inject",
        "z": "92533aa3038c1e4a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 430,
        "y": 80,
        "wires": [
            [
                "24ab7d21e0252574"
            ]
        ]
    },
    {
        "id": "9b4924b2da28b709",
        "type": "debug",
        "z": "92533aa3038c1e4a",
        "name": "debug 50",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 120,
        "wires": []
    },
    {
        "id": "80812c30ad0c7914",
        "type": "ui_slider",
        "z": "92533aa3038c1e4a",
        "name": "",
        "label": "Задана температура",
        "tooltip": "",
        "group": "ea499d3ceedbc31e",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 380,
        "y": 600,
        "wires": [
            [
                "c945f62d03364676",
                "c1fe0ba6a64a472a",
                "841dc89de4b5fd47",
                "349450807a7a650e"
            ]
        ]
    },
    {
        "id": "c945f62d03364676",
        "type": "function",
        "z": "92533aa3038c1e4a",
        "name": "В текст",
        "func": "msg.payload = msg.payload.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 640,
        "wires": [
            [
                "6738d4ce3ae28a30"
            ]
        ]
    },
    {
        "id": "c1fe0ba6a64a472a",
        "type": "ui_gauge",
        "z": "92533aa3038c1e4a",
        "name": "",
        "group": "ea499d3ceedbc31e",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Температура",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "80",
        "seg2": "90",
        "diff": false,
        "className": "",
        "x": 960,
        "y": 600,
        "wires": []
    },
    {
        "id": "6738d4ce3ae28a30",
        "type": "ui_audio",
        "z": "92533aa3038c1e4a",
        "name": "",
        "group": "ea499d3ceedbc31e",
        "voice": "Google русский",
        "always": "",
        "x": 920,
        "y": 640,
        "wires": []
    },
    {
        "id": "841dc89de4b5fd47",
        "type": "switch",
        "z": "92533aa3038c1e4a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "0",
                "vt": "num",
                "v2": "50",
                "v2t": "num"
            },
            {
                "t": "gte",
                "v": "51",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 720,
        "wires": [
            [
                "59f3c0ba4869d0ec"
            ],
            [
                "a365b9da16b64cde"
            ]
        ]
    },
    {
        "id": "59f3c0ba4869d0ec",
        "type": "change",
        "z": "92533aa3038c1e4a",
        "name": "Norma",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Норма",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "GREEN",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 700,
        "wires": [
            [
                "41aa5597276473a1"
            ]
        ]
    },
    {
        "id": "a365b9da16b64cde",
        "type": "change",
        "z": "92533aa3038c1e4a",
        "name": "Alarm",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Аварія",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "color",
                "pt": "msg",
                "to": "RED",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 760,
        "wires": [
            [
                "41aa5597276473a1"
            ]
        ]
    },
    {
        "id": "41aa5597276473a1",
        "type": "ui_button",
        "z": "92533aa3038c1e4a",
        "name": "",
        "group": "ea499d3ceedbc31e",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "{{msg.payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.color}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 950,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "2cedf30af55805ea",
        "type": "debug",
        "z": "92533aa3038c1e4a",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 940,
        "wires": []
    },
    {
        "id": "b0e860432692fab4",
        "type": "ui_gauge",
        "z": "92533aa3038c1e4a",
        "name": "",
        "group": "b0fe1aeee5fbf23d",
        "order": 3,
        "width": "6",
        "height": "5",
        "gtype": "donut",
        "title": "Температура",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 940,
        "y": 980,
        "wires": []
    },
    {
        "id": "e1ef28d87c8b83cf",
        "type": "ui_gauge",
        "z": "92533aa3038c1e4a",
        "name": "",
        "group": "b0fe1aeee5fbf23d",
        "order": 4,
        "width": "6",
        "height": "5",
        "gtype": "wave",
        "title": "Рівень",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 970,
        "y": 1020,
        "wires": []
    },
    {
        "id": "f838f9e65d39c1f3",
        "type": "change",
        "z": "92533aa3038c1e4a",
        "name": "Визначити температуру",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 980,
        "wires": [
            [
                "b0e860432692fab4"
            ]
        ]
    },
    {
        "id": "cafe7ad885de890c",
        "type": "change",
        "z": "92533aa3038c1e4a",
        "name": "Визначити рівень",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[1]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1020,
        "wires": [
            [
                "e1ef28d87c8b83cf"
            ]
        ]
    },
    {
        "id": "29853289a3785672",
        "type": "inject",
        "z": "92533aa3038c1e4a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 1140,
        "wires": [
            [
                "6aa45b0c4ce894f5"
            ]
        ]
    },
    {
        "id": "6aa45b0c4ce894f5",
        "type": "NetworkIntf",
        "z": "92533aa3038c1e4a",
        "name": "",
        "x": 570,
        "y": 1140,
        "wires": [
            [
                "08eef8067e073b93"
            ]
        ]
    },
    {
        "id": "2cd7fa0956eab912",
        "type": "debug",
        "z": "92533aa3038c1e4a",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 1140,
        "wires": []
    },
    {
        "id": "08eef8067e073b93",
        "type": "function",
        "z": "92533aa3038c1e4a",
        "name": "MACs",
        "func": "var obmsg = msg.payload.networkInterfaces;\nvar obInterface = {};\nvar MACs=[]\nvar i =0\nfor (var keyIf in obmsg) {\n    obInterface = obmsg [keyIf];\n    MACs[i++] = 'MAC'+i+' '+obInterface[0].mac;\n}\nmsg.payload = MACs;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1140,
        "wires": [
            [
                "2cd7fa0956eab912"
            ]
        ]
    },
    {
        "id": "0db50dd30eb92743",
        "type": "modbustcp-read",
        "z": "92533aa3038c1e4a",
        "name": "",
        "topic": "",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "10",
        "rate": "5",
        "rateUnit": "s",
        "server": "1b645d3a82da0d5f",
        "ieeeType": "off",
        "ieeeBE": true,
        "x": 370,
        "y": 1020,
        "wires": [
            [
                "2cedf30af55805ea",
                "f838f9e65d39c1f3",
                "cafe7ad885de890c"
            ]
        ]
    },
    {
        "id": "dd7183bcbb330a59",
        "type": "modbustcp-write",
        "z": "92533aa3038c1e4a",
        "name": "",
        "topic": "",
        "dataType": "HoldingRegisters",
        "adr": "10",
        "server": "1b645d3a82da0d5f",
        "x": 610,
        "y": 820,
        "wires": []
    },
    {
        "id": "349450807a7a650e",
        "type": "function",
        "z": "92533aa3038c1e4a",
        "name": "INT to ARINT",
        "func": "msg.payload = [msg.payload];\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 720,
        "wires": [
            [
                "dd7183bcbb330a59"
            ]
        ]
    },
    {
        "id": "3e879c42ef7a694b",
        "type": "mqtt in",
        "z": "1b9c1dafa5e22344",
        "name": "",
        "topic": "NUFT TI4/Variant4/#",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "bd54b47d44b42a5c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1490,
        "y": 100,
        "wires": [
            [
                "07cb2eed31088807"
            ]
        ]
    },
    {
        "id": "07cb2eed31088807",
        "type": "debug",
        "z": "1b9c1dafa5e22344",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1780,
        "y": 100,
        "wires": []
    },
    {
        "id": "471f20db3439e974",
        "type": "mqtt out",
        "z": "1b9c1dafa5e22344",
        "name": "",
        "topic": "NUFT TI4/Variant4/TT101",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "bd54b47d44b42a5c",
        "x": 1850,
        "y": 220,
        "wires": []
    },
    {
        "id": "cbcab46d389aaa2d",
        "type": "mqtt in",
        "z": "1b9c1dafa5e22344",
        "name": "",
        "topic": "NUFT TI4/Variant4/Klapan",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "bd54b47d44b42a5c",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1510,
        "y": 160,
        "wires": [
            [
                "f3e647ee50ee308b"
            ]
        ]
    },
    {
        "id": "f3e647ee50ee308b",
        "type": "ui_gauge",
        "z": "1b9c1dafa5e22344",
        "name": "",
        "group": "ea499d3ceedbc31e",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Клапан",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1800,
        "y": 160,
        "wires": []
    },
    {
        "id": "784eb3e542ad47d9",
        "type": "ui_slider",
        "z": "1b9c1dafa5e22344",
        "name": "",
        "label": "Температура",
        "tooltip": "",
        "group": "ea499d3ceedbc31e",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 1580,
        "y": 220,
        "wires": [
            [
                "471f20db3439e974"
            ]
        ]
    },
    {
        "id": "eddbe3b90221c17a",
        "type": "inject",
        "z": "1b9c1dafa5e22344",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1490,
        "y": 320,
        "wires": [
            [
                "8fcc0b11bd805583"
            ]
        ]
    },
    {
        "id": "8fcc0b11bd805583",
        "type": "function",
        "z": "1b9c1dafa5e22344",
        "name": "sin",
        "func": "var a;\na = msg.payload/10000;\nmsg.payload = (Math.sin (a) + 1.0)*25.0+25;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 320,
        "wires": [
            [
                "784eb3e542ad47d9"
            ]
        ]
    },
    {
        "id": "cf0280044de8f808",
        "type": "inject",
        "z": "d4d8ee4fd8339b93",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 530,
        "y": 180,
        "wires": [
            [
                "a866638dd037974b"
            ]
        ]
    },
    {
        "id": "a866638dd037974b",
        "type": "function",
        "z": "d4d8ee4fd8339b93",
        "name": "function 10",
        "func": "let rad = context.get (\"rad\") || 0;\nrad = (rad>6.28) ? 0 : rad + 0.1;\nmsg.payload = (Math.sin (rad)+1)/2*100; \ncontext.set (\"rad\", rad);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 180,
        "wires": [
            [
                "5c919015c22c7685"
            ]
        ]
    },
    {
        "id": "5c919015c22c7685",
        "type": "mqtt out",
        "z": "d4d8ee4fd8339b93",
        "name": "",
        "topic": "volodko/device1/random",
        "qos": "1",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "079ca4291efacc98",
        "x": 930,
        "y": 180,
        "wires": []
    },
    {
        "id": "f936c2326660f033",
        "type": "mqtt in",
        "z": "d4d8ee4fd8339b93",
        "name": "",
        "topic": "volodko/#",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "079ca4291efacc98",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 560,
        "y": 260,
        "wires": [
            [
                "40ee18d7cc319f3e"
            ]
        ]
    },
    {
        "id": "40ee18d7cc319f3e",
        "type": "debug",
        "z": "d4d8ee4fd8339b93",
        "name": "debug 45",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 260,
        "wires": []
    },
    {
        "id": "5bad4ac1b3d54115",
        "type": "inject",
        "z": "eeb71a8241dafe88",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "263691b688bdd497"
            ]
        ]
    },
    {
        "id": "263691b688bdd497",
        "type": "file in",
        "z": "eeb71a8241dafe88",
        "name": "Scan",
        "filename": "C:\\Temp\\barcods\\штрих код.jpg",
        "filenameType": "str",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 330,
        "y": 180,
        "wires": [
            [
                "d0f382da.60357",
                "94b3ea0ab6254143"
            ]
        ]
    },
    {
        "id": "6e8db474857db744",
        "type": "debug",
        "z": "eeb71a8241dafe88",
        "name": "Msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 260,
        "wires": []
    },
    {
        "id": "d0f382da.60357",
        "type": "function",
        "z": "eeb71a8241dafe88",
        "name": "Формувати Запит",
        "func": "//формування корисного навантаження для POST\n//складається зі статичного тексту з описом розділу\n//та змісту розділу, який є типом image/jpeg що береться з файлу\n//деталі - https://developer.mozilla.org/uk/docs/Web/HTTP/Basics_of_HTTP/MIME_types#multipartform-data \nvar tmp1;//верхня частина - початок розділу\nvar tmp2;//нижня частина - закінчення розділу\ntmp1 = '-----------------------------12818302946532\\r\\n';//межа початку розділу\ntmp1 += 'Content-Disposition: form-data; name=\"f\"; filename=\"1.jpg\"\\r\\n';//заголовок розділу\ntmp1 += 'Content-Type: image/jpeg\\r\\n\\r\\n';//заголовок розділу\ntmp2 = '\\r\\n-----------------------------12818302946532--';//межа кінця розділу\nvar buf1 = Buffer.from(tmp1);//перетворення тексту в бінарний буфер\nvar buf3 = Buffer.from(tmp2);//перетворення тексту в бінарний буфер\nvar ar =[buf1, msg.payload, buf3];//об'єднання буферів та вмісту файлу в один масив\nmsg.payload =  Buffer.concat(ar);//перетворення масиву в один буфер\n\n//формування заголовків запиту\nmsg.headers = {};//об'явили як об'єкт\nmsg.headers[\"host\"] = \"zxing.org\";\nmsg.headers[\"Accept-Encoding\"] = \"identity\";\nmsg.headers[\"accept\"] = \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\";\nmsg.headers[\"content-type\"]= \"multipart/form-data; boundary=---------------------------12818302946532\";\nvar len = msg.payload.length;//визначаємо довжину тіла запиту\nmsg.headers[\"content-length\"] = len.toString();//перетворюємо в текст \nmsg.headers[\"referer\"] = \"https://zxing.org/w/decode.jspx\";\nmsg.headers[\"connection\"] = \"keep-alive\";\nmsg.headers[\"upgrade-insecure-requests\"] = 1;\nreturn msg;//повідомлення для відправки методом POST",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 180,
        "wires": [
            [
                "a2f4ac46cee3cf47",
                "4db1b4b53983e0de"
            ]
        ]
    },
    {
        "id": "a2f4ac46cee3cf47",
        "type": "http request",
        "z": "eeb71a8241dafe88",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://zxing.org/w/decode",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 190,
        "y": 260,
        "wires": [
            [
                "0e4af3e8f4d571d6",
                "c7b0d76ad7414e3b"
            ]
        ]
    },
    {
        "id": "0e4af3e8f4d571d6",
        "type": "html",
        "z": "eeb71a8241dafe88",
        "name": "Вибірка",
        "property": "payload",
        "outproperty": "payload",
        "tag": "#result pre",
        "ret": "text",
        "as": "single",
        "x": 400,
        "y": 260,
        "wires": [
            [
                "e3e978e84056a0ed",
                "49d74e87157f7cb2"
            ]
        ]
    },
    {
        "id": "e3e978e84056a0ed",
        "type": "function",
        "z": "eeb71a8241dafe88",
        "name": "function 1",
        "func": "msg.ID=(msg.statusCode==200) ? msg.payload[2] : \"error\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 260,
        "wires": [
            [
                "6e8db474857db744"
            ]
        ]
    },
    {
        "id": "94b3ea0ab6254143",
        "type": "debug",
        "z": "eeb71a8241dafe88",
        "name": "debug 32",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 100,
        "wires": []
    },
    {
        "id": "c7b0d76ad7414e3b",
        "type": "debug",
        "z": "eeb71a8241dafe88",
        "name": "debug 34",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 360,
        "wires": []
    },
    {
        "id": "49d74e87157f7cb2",
        "type": "debug",
        "z": "eeb71a8241dafe88",
        "name": "debug 35",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 360,
        "wires": []
    },
    {
        "id": "4db1b4b53983e0de",
        "type": "debug",
        "z": "eeb71a8241dafe88",
        "name": "debug 33",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 180,
        "wires": []
    },
    {
        "id": "dc570d24ba21e6bc",
        "type": "inject",
        "z": "eeb71a8241dafe88",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 340,
        "y": 480,
        "wires": [
            [
                "3f04fd9ff4d47081"
            ]
        ]
    },
    {
        "id": "3f04fd9ff4d47081",
        "type": "http request",
        "z": "eeb71a8241dafe88",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://ip-api.com/json/",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 530,
        "y": 480,
        "wires": [
            [
                "0a1f99cf9deb456f"
            ]
        ]
    },
    {
        "id": "0a1f99cf9deb456f",
        "type": "debug",
        "z": "eeb71a8241dafe88",
        "name": "debug 41",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 480,
        "wires": []
    },
    {
        "id": "b11441900e64bfc6",
        "type": "inject",
        "z": "7e8c6afd411b87b7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 120,
        "wires": [
            [
                "f315bf6d0d3780ab"
            ]
        ]
    },
    {
        "id": "f315bf6d0d3780ab",
        "type": "http request",
        "z": "7e8c6afd411b87b7",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "body",
        "url": "http://api.weatherapi.com/v1/current.json?key=55e7c2e4a1fe4e65b88145232230305&q=Kiev&aqi=no",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 270,
        "y": 120,
        "wires": [
            [
                "b85a3ca42b1eeb02",
                "8ddb72b2c931de36"
            ]
        ]
    },
    {
        "id": "c611dc7aa7c779f4",
        "type": "debug",
        "z": "7e8c6afd411b87b7",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 120,
        "wires": []
    },
    {
        "id": "cdac448273c0000b",
        "type": "file",
        "z": "7e8c6afd411b87b7",
        "name": "output-to-excel",
        "filename": "C:\\Users\\Pavel_PC\\Desktop\\Weather.csv",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "utf8",
        "x": 740,
        "y": 120,
        "wires": [
            [
                "c611dc7aa7c779f4"
            ]
        ]
    },
    {
        "id": "b85a3ca42b1eeb02",
        "type": "change",
        "z": "7e8c6afd411b87b7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temp_c",
                "pt": "msg",
                "to": "payload.current.temp_c",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.location",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.temp_c",
                "pt": "msg",
                "to": "temp_c",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 120,
        "wires": [
            [
                "abfd84167c286eb3"
            ]
        ]
    },
    {
        "id": "abfd84167c286eb3",
        "type": "csv",
        "z": "7e8c6afd411b87b7",
        "name": "",
        "sep": ";",
        "hdrin": false,
        "hdrout": "none",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "localtime,name,region,country,temp_c",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 590,
        "y": 120,
        "wires": [
            [
                "cdac448273c0000b"
            ]
        ]
    },
    {
        "id": "8ddb72b2c931de36",
        "type": "debug",
        "z": "7e8c6afd411b87b7",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 200,
        "wires": []
    },
    {
        "id": "107879ac57a5f3b8",
        "type": "inject",
        "z": "e06d740db386372e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 180,
        "wires": [
            [
                "530f0e9ee8c941bb"
            ]
        ]
    },
    {
        "id": "530f0e9ee8c941bb",
        "type": "function",
        "z": "e06d740db386372e",
        "name": "Наповнення буферу",
        "func": "let now = new Date();//сьогодні\n//trend - 2-мірний масив 3x60, на 60 останніх значень \n//читання з контексту потоку або ініціалізація масиву-буферу\nlet trend = flow.get(\"trend\") || [[now.toLocaleString()], [0], [0]];\nlet l = trend[0].length;    //довжина мавису\n//з кожним викликом збільшуємо градуси в радіанах\nlet rad = trend[1][l - 1] + Math.PI / 5;\nif (rad >= Math.PI * 2) rad = 0;//обнуляємо після повного кола\nlet val = Math.sin(rad);   //вираховуємо синус\n//на \"верх\" масиву добавляємо елементи \ntrend[0].push(now.toLocaleString());//дата час\ntrend[1].push(rad);    //радіани\ntrend[2].push(val);    //значення синусу\n//якщо масив заповнився до 60\nif (trend[0].length > 60) {\n    trend[0].shift();//вилучаємо перший (найстаріший) елемент\n    trend[1].shift();\n    trend[2].shift();\n    //після цього масиви повинні зменшитися на 1 елемент (60) \n    //і зсунутися вниз\n    //у випадку, якщо раптом елементів більше 60\n    //наприклад були добавлені випадково стороннім кодом\n    //зробити кількість елементів =60\n    trend[0].length = 60;//\n    trend[1].length = 60;\n    trend[2].length = 60;\n}\nflow.set(\"trend\", trend);//записати в контекст потоку\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 180,
        "wires": [
            [
                "7d6785dbd4d887e9"
            ]
        ]
    },
    {
        "id": "7d6785dbd4d887e9",
        "type": "debug",
        "z": "e06d740db386372e",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 180,
        "wires": []
    },
    {
        "id": "e3bbe4b039c15d14",
        "type": "inject",
        "z": "e06d740db386372e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "trend",
        "payloadType": "flow",
        "x": 250,
        "y": 240,
        "wires": [
            [
                "fec0bb859edacf6e"
            ]
        ]
    },
    {
        "id": "fec0bb859edacf6e",
        "type": "GSheet",
        "z": "e06d740db386372e",
        "creds": "f3a1a9fa2903623c",
        "method": "update",
        "action": "",
        "sheet": "1hbmWMGCysipscO6mTOjAWi3zl1sbUluz_nzLagn6oA4",
        "cells": "Лист1!A1:BH3",
        "flatten": false,
        "name": "",
        "x": 450,
        "y": 240,
        "wires": [
            [
                "41ce03f4ad4b0e78"
            ]
        ]
    },
    {
        "id": "41ce03f4ad4b0e78",
        "type": "debug",
        "z": "e06d740db386372e",
        "name": "debug 12",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 240,
        "wires": []
    },
    {
        "id": "87ec9a8ae80ba29b",
        "type": "telegram sender",
        "z": "8756f3d403a40b04",
        "name": "",
        "bot": "174cfcf56140dded",
        "haserroroutput": false,
        "outputs": 1,
        "x": 830,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "7b0f2a2d332bbc6d",
        "type": "telegram command",
        "z": "8756f3d403a40b04",
        "name": "",
        "command": "/start",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "174cfcf56140dded",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 170,
        "y": 140,
        "wires": [
            [
                "26aed5151572803b"
            ],
            []
        ]
    },
    {
        "id": "b92379eabfb10824",
        "type": "function",
        "z": "8756f3d403a40b04",
        "name": "Comand",
        "func": "let globalContext = global.get('globalContext') || {};\nlet txtmsg = \"/start - показати базові команди\\r\\n\";\ntxtmsg += \"/sp - виставлення уставок\\r\\n\";\ntxtmsg += \"/pv - отримання плинних значень\\r\\n\";\ntxtmsg += \"/alm - список активних тривог\\r\\n\";\nmsg.payload = {\n    chatId: globalContext.chatId,\n    type: 'message',\n    content: txtmsg\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 180,
        "wires": [
            [
                "736d3b11b4ea86ef",
                "87ec9a8ae80ba29b"
            ]
        ]
    },
    {
        "id": "c4c9252db8d4abdb",
        "type": "function",
        "z": "8756f3d403a40b04",
        "name": "Наповнення буферу",
        "func": "let now = new Date();//сьогодні\n//trend - 2-мірний масив 3x60, на 60 останніх значень \n//читання з контексту потоку або ініціалізація масиву-буферу\nlet trend = flow.get(\"trend\") || [[now.toLocaleString()], [0], [0]];\nlet l = trend[0].length;    //довжина мавису\n//з кожним викликом збільшуємо градуси в радіанах\nlet rad = trend[1][l - 1] + Math.PI / 5;\nif (rad >= Math.PI * 2) rad = 0;//обнуляємо після повного кола\nlet val = Math.sin(rad);   //вираховуємо синус\n//на \"верх\" масиву добавляємо елементи \ntrend[0].push(now.toLocaleString());//дата час\ntrend[1].push(rad);    //радіани\ntrend[2].push(val);    //значення синусу\n//якщо масив заповнився до 60\nif (trend[0].length > 60) {\n    trend[0].shift();//вилучаємо перший (найстаріший) елемент\n    trend[1].shift();\n    trend[2].shift();\n    //після цього масиви повинні зменшитися на 1 елемент (60) \n    //і зсунутися вниз\n    //у випадку, якщо раптом елементів більше 60\n    //наприклад були добавлені випадково стороннім кодом\n    //зробити кількість елементів =60\n    trend[0].length = 60;//\n    trend[1].length = 60;\n    trend[2].length = 60;\n}\nflow.set(\"trend\", trend);//записати в контекст потоку\nlet rtdb = { //глобальна змінна\n    trend: trend,\n    rad: rad,\n    val: val\n}\nglobal.set(\"rtdb\", rtdb);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "df7edc845d8a408f",
        "type": "inject",
        "z": "8756f3d403a40b04",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 320,
        "wires": [
            [
                "c4c9252db8d4abdb",
                "f2e54533370d440a"
            ]
        ]
    },
    {
        "id": "f2e54533370d440a",
        "type": "function",
        "z": "8756f3d403a40b04",
        "name": "Alarm",
        "func": "let globalContext = global.get('globalContext') || {};\nlet rtdb = global.get(\"rtdb\") || {};\nlet alm = global.get(\"alm\") || { //система тривог \n    state: { radHI: false, valHI: false }, //стан тривог \n    sp: { radHI: 10.0, valHI: 2.0 }     //уставки тривог\n};\n\nlet almmsg = \"\";\n//умова тривоги активна?\nlet alm_radHI = rtdb.rad > alm.sp.radHI;\nlet alm_valHI = rtdb.val > alm.sp.valHI;\n//якщо тривога тільки активувалася\nif (alm_radHI && !alm.state.radHI) {\n    almmsg += \"Радіани дорвінюють \" + rtdb.rad + \" , що вище зданого значення \" + alm.sp.radHI + \"\\r\\n\";\n}\nif (alm_valHI && !alm.state.valHI) {\n    almmsg += \"Синус дорвінює \" + rtdb.val + \" , що вище зданого значення \" + alm.sp.valHI + \"\\r\\n\"\n}\n//запис у стан тривоги\nalm.state.radHI = alm_radHI;\nalm.state.valHI = alm_valHI;\n//збереження станів тривоги в глобальному контексті\nglobal.set(\"alm\", alm);\n//якщо хоча виникла хоча б одна тривога - відправка повідомлень \nif (almmsg.length > 1) {\n    msg.payload = {\n        chatId: globalContext.chatId,\n        type: 'message',\n        content: almmsg\n    }\n    return msg;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 380,
        "wires": [
            [
                "4e8e10bf88907fcd"
            ]
        ]
    },
    {
        "id": "4e8e10bf88907fcd",
        "type": "telegram sender",
        "z": "8756f3d403a40b04",
        "name": "",
        "bot": "174cfcf56140dded",
        "haserroroutput": false,
        "outputs": 1,
        "x": 690,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "8ded95e0368c046f",
        "type": "inject",
        "z": "8756f3d403a40b04",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 360,
        "y": 440,
        "wires": [
            [
                "46fe9450e08c3fe6"
            ]
        ]
    },
    {
        "id": "46fe9450e08c3fe6",
        "type": "change",
        "z": "8756f3d403a40b04",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "alm.sp.radHI",
                "pt": "global",
                "to": "6.28",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "736d3b11b4ea86ef",
        "type": "debug",
        "z": "8756f3d403a40b04",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 140,
        "wires": []
    },
    {
        "id": "7635d2a08e0d8004",
        "type": "telegram receiver",
        "z": "8756f3d403a40b04",
        "name": "",
        "bot": "174cfcf56140dded",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 210,
        "y": 40,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e8e5162373d0f930",
        "type": "function",
        "z": "8756f3d403a40b04",
        "name": "Текстове повідомлення",
        "func": "let globalContext = global.get('globalContext') || {};\nmsg.payload = {\n    chatId: globalContext.chatId,\n    type: 'message',\n    content: 'Привіт я RPI бот!'\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 220,
        "wires": [
            [
                "87ec9a8ae80ba29b"
            ]
        ]
    },
    {
        "id": "26aed5151572803b",
        "type": "function",
        "z": "8756f3d403a40b04",
        "name": "Запис ChatId",
        "func": "const ChatID = msg.payload.chatId\nlet globalContext = global.get('globalContext') || {};\nglobalContext.chatId = ChatID\nglobal.set('globalContext', globalContext)\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 180,
        "wires": [
            [
                "404bfccf87e816cb",
                "b92379eabfb10824",
                "e8e5162373d0f930"
            ]
        ]
    },
    {
        "id": "404bfccf87e816cb",
        "type": "debug",
        "z": "8756f3d403a40b04",
        "name": "debug 29",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 60,
        "wires": []
    },
    {
        "id": "c94b72e556813bb9",
        "type": "telegram command",
        "z": "8756f3d403a40b04",
        "name": "",
        "command": "/sp",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "174cfcf56140dded",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 190,
        "y": 520,
        "wires": [
            [
                "bbcb984ba49790c2"
            ],
            [
                "7834308d6e8088fe"
            ]
        ]
    },
    {
        "id": "2ff4aa1727e872d1",
        "type": "telegram command",
        "z": "8756f3d403a40b04",
        "name": "",
        "command": "/rad",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "174cfcf56140dded",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 190,
        "y": 600,
        "wires": [
            [
                "4d9f0e7882bf11b1"
            ],
            [
                "8275deaa5f59de6d"
            ]
        ]
    },
    {
        "id": "3341eb64fa90286a",
        "type": "telegram command",
        "z": "8756f3d403a40b04",
        "name": "",
        "command": "/val",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "174cfcf56140dded",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 190,
        "y": 680,
        "wires": [
            [
                "a46fbe1b332bf038"
            ],
            [
                "c1d1b266d0a2319a"
            ]
        ]
    },
    {
        "id": "bbcb984ba49790c2",
        "type": "function",
        "z": "8756f3d403a40b04",
        "name": "Генерування клавіатури",
        "func": "context.global.keyboard = { pending: true };\nlet opts = {\n    reply_to_message_id: msg.payload.messageId,\n    reply_markup: JSON.stringify({\n        keyboard: [\n            ['/rad'],\n            ['/val'],\n            ['відміна']],\n        'resize_keyboard': true,\n        'one_time_keyboard': true\n    })\n};\nmsg.payload.content = 'Виберіть змінну';\nmsg.payload.options = opts;\nreturn [msg];",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 500,
        "wires": [
            [
                "815235dc85ca71e2"
            ]
        ]
    },
    {
        "id": "7834308d6e8088fe",
        "type": "change",
        "z": "8756f3d403a40b04",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "global.keyboard.pending",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "815235dc85ca71e2",
        "type": "telegram sender",
        "z": "8756f3d403a40b04",
        "name": "",
        "bot": "174cfcf56140dded",
        "haserroroutput": false,
        "outputs": 1,
        "x": 830,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "4d9f0e7882bf11b1",
        "type": "change",
        "z": "8756f3d403a40b04",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.content",
                "pt": "msg",
                "to": "Введіть значення уставки 'rad'",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 580,
        "wires": [
            [
                "815235dc85ca71e2"
            ]
        ]
    },
    {
        "id": "8275deaa5f59de6d",
        "type": "change",
        "z": "8756f3d403a40b04",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "alm.sp.radHI",
                "pt": "global",
                "to": "payload.content",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "a46fbe1b332bf038",
        "type": "change",
        "z": "8756f3d403a40b04",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.content",
                "pt": "msg",
                "to": "Введіть значення уставки 'val'",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 660,
        "wires": [
            [
                "815235dc85ca71e2"
            ]
        ]
    },
    {
        "id": "c1d1b266d0a2319a",
        "type": "change",
        "z": "8756f3d403a40b04",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "alm.sp.valHI",
                "pt": "global",
                "to": "payload.content",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "5b302853bc0b48dc",
        "type": "telegram command",
        "z": "8756f3d403a40b04",
        "name": "",
        "command": "/pv",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "174cfcf56140dded",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 190,
        "y": 760,
        "wires": [
            [
                "c83ba7a013bdd728"
            ],
            []
        ]
    },
    {
        "id": "c83ba7a013bdd728",
        "type": "change",
        "z": "8756f3d403a40b04",
        "name": "Set msg",
        "rules": [
            {
                "t": "set",
                "p": "rad",
                "pt": "msg",
                "to": "rtdb.rad",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "val",
                "pt": "msg",
                "to": "rtdb.val",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 740,
        "wires": [
            [
                "0109d403b2d7b6d3"
            ]
        ]
    },
    {
        "id": "0109d403b2d7b6d3",
        "type": "function",
        "z": "8756f3d403a40b04",
        "name": "pv",
        "func": "let globalContext = global.get('globalContext') || {};\nmsg.payload = {\n    chatId: globalContext.chatId,\n    type: \"message\",\n    content: \"Плинне значення rad =\" + msg.rad + \"\\r\\n\" + \"Плинне значення val =\" + msg.val + \"\\r\\n\"\n};\n//\"rad=\\r\\n\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 740,
        "wires": [
            [
                "815235dc85ca71e2",
                "b237d905e0ae848a"
            ]
        ]
    },
    {
        "id": "8b7313628101411f",
        "type": "telegram command",
        "z": "8756f3d403a40b04",
        "name": "",
        "command": "/alm",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "174cfcf56140dded",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 190,
        "y": 840,
        "wires": [
            [
                "c8cc68eec8f7c904"
            ],
            []
        ]
    },
    {
        "id": "b887f02cbaaea4d2",
        "type": "function",
        "z": "8756f3d403a40b04",
        "name": "alm",
        "func": "let globalContext = global.get('globalContext') || {};\nlet almmsg = \"\";\n\nif (msg.almrad == false && msg.almval == false ) {\n    almmsg = \"Активних тривог немає.\\r\\n\";\n}\nelse if (msg.almrad == true) {\n    almmsg = \"Тривога Rad.\\r\\n\";\n\n}\nelse if (msg.almval == true) {\n    almmsg = \"Тривога Vad.\\r\\n\";\n}\nmsg.payload = {\n    chatId: globalContext.chatId,\n    type: \"message\",\n    content: almmsg\n};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 820,
        "wires": [
            [
                "815235dc85ca71e2",
                "db65ee0227335777"
            ]
        ]
    },
    {
        "id": "c8cc68eec8f7c904",
        "type": "change",
        "z": "8756f3d403a40b04",
        "name": "Set msg",
        "rules": [
            {
                "t": "set",
                "p": "almrad",
                "pt": "msg",
                "to": "alm.state.radHI",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "almval",
                "pt": "msg",
                "to": "alm.state.valHI",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 820,
        "wires": [
            [
                "b887f02cbaaea4d2"
            ]
        ]
    },
    {
        "id": "b237d905e0ae848a",
        "type": "debug",
        "z": "8756f3d403a40b04",
        "name": "debug 27",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 740,
        "wires": []
    },
    {
        "id": "db65ee0227335777",
        "type": "debug",
        "z": "8756f3d403a40b04",
        "name": "debug 30",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 860,
        "wires": []
    },
    {
        "id": "fd80af9b2aee5a6c",
        "type": "inject",
        "z": "d6bfac57e9ae0511",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 900,
        "y": 100,
        "wires": [
            [
                "207efc3332145955"
            ]
        ]
    },
    {
        "id": "207efc3332145955",
        "type": "OpcUa-Item",
        "z": "d6bfac57e9ae0511",
        "item": "ns=3;s=AirConditioner_1.Temperature",
        "datatype": "Double",
        "value": "",
        "name": "",
        "x": 1080,
        "y": 100,
        "wires": [
            [
                "022f857e9aa70e15"
            ]
        ]
    },
    {
        "id": "022f857e9aa70e15",
        "type": "OpcUa-Client",
        "z": "d6bfac57e9ae0511",
        "endpoint": "77f058b7f8dabfa6",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "name": "",
        "x": 1260,
        "y": 100,
        "wires": [
            [
                "7b63a648de78834f"
            ]
        ]
    },
    {
        "id": "7b63a648de78834f",
        "type": "debug",
        "z": "d6bfac57e9ae0511",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 100,
        "wires": []
    },
    {
        "id": "cc6d43e43071665f",
        "type": "inject",
        "z": "d6bfac57e9ae0511",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ns=2;s=Demo.Static.Arrays.Structure;datatype=ExtensionObject",
        "payload": "",
        "payloadType": "date",
        "x": 900,
        "y": 160,
        "wires": [
            [
                "0e597ec5c1ae4ac1"
            ]
        ]
    },
    {
        "id": "0e597ec5c1ae4ac1",
        "type": "OpcUa-Client",
        "z": "d6bfac57e9ae0511",
        "endpoint": "77f058b7f8dabfa6",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "name": "",
        "x": 1080,
        "y": 160,
        "wires": [
            [
                "cd1f9e1d94302e50"
            ]
        ]
    },
    {
        "id": "cd1f9e1d94302e50",
        "type": "debug",
        "z": "d6bfac57e9ae0511",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 160,
        "wires": []
    },
    {
        "id": "aef52d0456318557",
        "type": "inject",
        "z": "d6bfac57e9ae0511",
        "name": "Read multiple items",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "readmultiple",
        "x": 930,
        "y": 220,
        "wires": [
            [
                "27a1fa14bd3922bb"
            ]
        ]
    },
    {
        "id": "2bd55bd35dd3226f",
        "type": "inject",
        "z": "d6bfac57e9ae0511",
        "name": "Clear nodeId array",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "clearitems",
        "x": 930,
        "y": 280,
        "wires": [
            [
                "27a1fa14bd3922bb"
            ]
        ]
    },
    {
        "id": "41504fec59d7cb54",
        "type": "inject",
        "z": "d6bfac57e9ae0511",
        "name": "Add items",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "additem",
        "x": 900,
        "y": 340,
        "wires": [
            [
                "29a8e9107ded65a2"
            ]
        ]
    },
    {
        "id": "29a8e9107ded65a2",
        "type": "function",
        "z": "d6bfac57e9ae0511",
        "name": "function 2",
        "func": "for (let i=1; i<11; i++){\n    msg.topic = `ns=3;s=AirConditioner_${i}.Temperature;datatype=Double`;\n    msg.payload = i;\n    node.send (msg);\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 340,
        "wires": [
            [
                "27a1fa14bd3922bb"
            ]
        ]
    },
    {
        "id": "27a1fa14bd3922bb",
        "type": "OpcUa-Client",
        "z": "d6bfac57e9ae0511",
        "endpoint": "77f058b7f8dabfa6",
        "action": "readmultiple",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "name": "",
        "x": 1260,
        "y": 280,
        "wires": [
            [
                "93e73bf62a0f556c"
            ]
        ]
    },
    {
        "id": "93e73bf62a0f556c",
        "type": "debug",
        "z": "d6bfac57e9ae0511",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 280,
        "wires": []
    },
    {
        "id": "634a16a999b35b76",
        "type": "inject",
        "z": "d6bfac57e9ae0511",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ns=2;s=Demo.Static.Arrays.Double;datatype=Double Array",
        "payload": "[1,2,3,4,5,6,7,8,9,10]",
        "payloadType": "json",
        "x": 930,
        "y": 400,
        "wires": [
            [
                "343dd4a4fce9644f"
            ]
        ]
    },
    {
        "id": "343dd4a4fce9644f",
        "type": "OpcUa-Client",
        "z": "d6bfac57e9ae0511",
        "endpoint": "77f058b7f8dabfa6",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "name": "",
        "x": 1140,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "1eeb5ff0.f9c0e",
        "type": "inject",
        "z": "d6bfac57e9ae0511",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ns=3;s=AirConditioner_1.HumiditySetpoint",
        "payload": "[{\"datatype\":\"Double\",\"nodeId\":\"ns=3;s=AirConditioner_1.TemperatureSetPoint\",\"value\":55},{\"datatype\":\"Double Array\",\"nodeId\":\"ns=2;s=Demo.Static.Arrays.Double\",\"value\":[1,22]}]",
        "payloadType": "json",
        "x": 890,
        "y": 460,
        "wires": [
            [
                "4f06c0adde86632d"
            ]
        ]
    },
    {
        "id": "4f06c0adde86632d",
        "type": "OpcUa-Client",
        "z": "d6bfac57e9ae0511",
        "endpoint": "77f058b7f8dabfa6",
        "action": "writemultiple",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "name": "",
        "x": 1080,
        "y": 460,
        "wires": [
            [
                "75023e0fcfcf8d09"
            ]
        ]
    },
    {
        "id": "75023e0fcfcf8d09",
        "type": "debug",
        "z": "d6bfac57e9ae0511",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 460,
        "wires": []
    },
    {
        "id": "a52733fedafdc127",
        "type": "inject",
        "z": "d6bfac57e9ae0511",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ns=3;s=AirConditioner_1.Temperature",
        "payload": "5000",
        "payloadType": "num",
        "x": 890,
        "y": 520,
        "wires": [
            [
                "817111aad56d8f64"
            ]
        ]
    },
    {
        "id": "817111aad56d8f64",
        "type": "OpcUa-Client",
        "z": "d6bfac57e9ae0511",
        "endpoint": "77f058b7f8dabfa6",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "5",
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "name": "",
        "x": 1080,
        "y": 520,
        "wires": [
            [
                "ff1b25e7346ce055"
            ]
        ]
    },
    {
        "id": "ff1b25e7346ce055",
        "type": "debug",
        "z": "d6bfac57e9ae0511",
        "name": "debug 21",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 520,
        "wires": []
    },
    {
        "id": "aa13b8fef3fd8fcc",
        "type": "function",
        "z": "d6bfac57e9ae0511",
        "name": "function 3",
        "func": "for (let i=1; i<11; i++){\n    msg.topic = `ns=3;s=AirConditioner_${i}.Temperature;datatype=Double`;\n    msg.payload = i;\n    node.send (msg);\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 580,
        "wires": [
            [
                "cb87366da74decc3"
            ]
        ]
    },
    {
        "id": "6ee73d5fec260262",
        "type": "inject",
        "z": "d6bfac57e9ae0511",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "ns=3;s=AirConditioner_1.Temperature",
        "payload": "5000",
        "payloadType": "num",
        "x": 890,
        "y": 580,
        "wires": [
            [
                "aa13b8fef3fd8fcc"
            ]
        ]
    },
    {
        "id": "cb87366da74decc3",
        "type": "OpcUa-Client",
        "z": "d6bfac57e9ae0511",
        "endpoint": "77f058b7f8dabfa6",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "5",
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "name": "",
        "x": 1220,
        "y": 580,
        "wires": [
            [
                "63916afe39930966"
            ]
        ]
    },
    {
        "id": "63916afe39930966",
        "type": "debug",
        "z": "d6bfac57e9ae0511",
        "name": "debug 22",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1460,
        "y": 580,
        "wires": []
    },
    {
        "id": "1fa4c9a8228b0b23",
        "type": "OpcUa-Client",
        "z": "84509d07d435e576",
        "endpoint": "77f058b7f8dabfa6",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "1",
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "name": "",
        "x": 1210,
        "y": 220,
        "wires": [
            [
                "ff112479debf24c4",
                "a434222f891058bd"
            ]
        ]
    },
    {
        "id": "5e0d8574a4e29192",
        "type": "inject",
        "z": "84509d07d435e576",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 820,
        "y": 220,
        "wires": [
            [
                "3026c7758bc314a4"
            ]
        ]
    },
    {
        "id": "3026c7758bc314a4",
        "type": "function",
        "z": "84509d07d435e576",
        "name": "addsubscribe",
        "func": "let RTDB = {};\nconst pref = \"ns=3;s=\";\nfor (let i=1; i<3; i++) {\n    let obname = pref + \"AirConditioner_\" + i;\n    let ob = RTDB[obname] = {\n        Humidity: {val : 0, topic : obname + \".Humidity\" },\n        HumiditySetpoint:{val : 0, topic : obname + \".HumiditySetpoint\" },\n        PowerConsumption:{val : 0, topic : obname + \".PowerConsumption\" },\n        State: {val : 0, topic : obname + \".State\" },\n        Temperature:{val : 0, topic : obname + \".Temperature\" },\n        TemperatureSetPoint:{val : 0, topic : obname + \".TemperatureSetPoint\" }        \n    };\n}\nglobal.set (\"RTDB\", RTDB);\nmsg.payload = RTDB;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 220,
        "wires": [
            [
                "6865d22d7d8efffa"
            ]
        ]
    },
    {
        "id": "ff112479debf24c4",
        "type": "debug",
        "z": "84509d07d435e576",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1420,
        "y": 220,
        "wires": []
    },
    {
        "id": "6865d22d7d8efffa",
        "type": "split",
        "z": "84509d07d435e576",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 840,
        "y": 280,
        "wires": [
            [
                "36557d3b384e4a72"
            ]
        ]
    },
    {
        "id": "36557d3b384e4a72",
        "type": "split",
        "z": "84509d07d435e576",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 980,
        "y": 280,
        "wires": [
            [
                "197b0797e7808fb3"
            ]
        ]
    },
    {
        "id": "197b0797e7808fb3",
        "type": "change",
        "z": "84509d07d435e576",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload.topic",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1000",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 280,
        "wires": [
            [
                "1fa4c9a8228b0b23"
            ]
        ]
    },
    {
        "id": "a434222f891058bd",
        "type": "function",
        "z": "84509d07d435e576",
        "name": "ToRDB",
        "func": "global.set (\"RTDB.\" + msg.topic + \".val\", msg.payload);\n//запись отметки времени в числовом формате \nglobal.set (\"RTDB.\" + msg.topic + \".ts\", new Date(msg.sourceTimestamp).valueOf());\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "4fc7be5e1f43326d",
        "type": "inject",
        "z": "76bcc671b3a34490",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 120,
        "wires": [
            [
                "e070dc79cf9e42b4"
            ]
        ]
    },
    {
        "id": "e070dc79cf9e42b4",
        "type": "function",
        "z": "76bcc671b3a34490",
        "name": "function 4",
        "func": "let cond = global.get(\"RTDB.ns=3;s=AirConditioner_1\");\nlet ob = {};\n//https://ubidots.com/docs/hw/#introduction\nfor (const tag in cond) {\n    ob[tag] = {\n        \"value\": cond[tag].val,\n        \"timestamp\": cond[tag].ts,\n        \"context\": { \"key1\": \"value1\", \"key2\": \"value2\" },\n        \"created_at\": cond[tag].ts\n    };\n}\nmsg.payload = ob;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 120,
        "wires": [
            [
                "7597bb4f46973848"
            ]
        ]
    },
    {
        "id": "3941423760dd68a6",
        "type": "debug",
        "z": "76bcc671b3a34490",
        "name": "debug 23",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 320,
        "wires": []
    },
    {
        "id": "4daa75f06e5b25cf",
        "type": "ubidots_in",
        "z": "76bcc671b3a34490",
        "tier": "business",
        "name": "Ubidots in",
        "token": "BBUS-dcIuCenMXc1efqsfqLOD64O0jsCM25",
        "device_label": "Conditioner_1",
        "tls_checkbox_in": true,
        "custom_topic_checkbox": false,
        "label_variable_1": "HumiditySetpoint",
        "label_variable_2": "",
        "label_variable_3": "",
        "label_variable_4": "",
        "label_variable_5": "",
        "label_variable_6": "",
        "label_variable_7": "",
        "label_variable_8": "",
        "label_variable_9": "",
        "label_variable_10": "",
        "checkbox_variable_1_last_value": true,
        "checkbox_variable_2_last_value": true,
        "checkbox_variable_3_last_value": true,
        "checkbox_variable_4_last_value": true,
        "checkbox_variable_5_last_value": true,
        "checkbox_variable_6_last_value": true,
        "checkbox_variable_7_last_value": true,
        "checkbox_variable_8_last_value": true,
        "checkbox_variable_9_last_value": true,
        "checkbox_variable_10_last_value": true,
        "x": 240,
        "y": 200,
        "wires": [
            [
                "5be059e4ab94c90d"
            ]
        ]
    },
    {
        "id": "5be059e4ab94c90d",
        "type": "change",
        "z": "76bcc671b3a34490",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ns=3;s=AirConditioner_1.HumiditySetpoint;datatype=Double",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.humiditysetpoint.value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 200,
        "wires": [
            [
                "85277be4989a238f",
                "3941423760dd68a6"
            ]
        ]
    },
    {
        "id": "85277be4989a238f",
        "type": "OpcUa-Client",
        "z": "76bcc671b3a34490",
        "endpoint": "77f058b7f8dabfa6",
        "action": "write",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "1",
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "name": "",
        "x": 720,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "fb06087a84c03cb1",
        "type": "ubidots_in",
        "z": "76bcc671b3a34490",
        "tier": "business",
        "name": "Ubidots in",
        "token": "BBUS-dcIuCenMXc1efqsfqLOD64O0jsCM25",
        "device_label": "Conditioner_1",
        "tls_checkbox_in": true,
        "custom_topic_checkbox": false,
        "label_variable_1": "TemperatureSetPoint",
        "label_variable_2": "",
        "label_variable_3": "",
        "label_variable_4": "",
        "label_variable_5": "",
        "label_variable_6": "",
        "label_variable_7": "",
        "label_variable_8": "",
        "label_variable_9": "",
        "label_variable_10": "",
        "checkbox_variable_1_last_value": true,
        "checkbox_variable_2_last_value": true,
        "checkbox_variable_3_last_value": true,
        "checkbox_variable_4_last_value": true,
        "checkbox_variable_5_last_value": true,
        "checkbox_variable_6_last_value": true,
        "checkbox_variable_7_last_value": true,
        "checkbox_variable_8_last_value": true,
        "checkbox_variable_9_last_value": true,
        "checkbox_variable_10_last_value": true,
        "x": 240,
        "y": 280,
        "wires": [
            [
                "a387a35cd4530984"
            ]
        ]
    },
    {
        "id": "a387a35cd4530984",
        "type": "change",
        "z": "76bcc671b3a34490",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ns=3;s=AirConditioner_1.TemperatureSetPoint;datatype=Double",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.temperaturesetpoint.value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 280,
        "wires": [
            [
                "85277be4989a238f",
                "3941423760dd68a6"
            ]
        ]
    },
    {
        "id": "7597bb4f46973848",
        "type": "ubidots_out",
        "z": "76bcc671b3a34490",
        "name": "",
        "token": "BBUS-dcIuCenMXc1efqsfqLOD64O0jsCM25",
        "label_device": "",
        "device_label": "Conditioner_1",
        "tier": "educational",
        "tls_checkbox": true,
        "x": 630,
        "y": 120,
        "wires": []
    },
    {
        "id": "ab472f9b460178a2",
        "type": "function",
        "z": "760f23939087cb96",
        "name": "multiplesubscribe",
        "func": "msg.payload=10000;\nfor (let i = 1; i < 11; i++) {\n   msg.topic=`ns=3;s=AirConditioner_${i}.Temperature`;\n   node.send(msg);\n    }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 140,
        "wires": [
            [
                "a21fad02e87d5aa8"
            ]
        ]
    },
    {
        "id": "c8770202d16a3012",
        "type": "inject",
        "z": "760f23939087cb96",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 790,
        "y": 140,
        "wires": [
            [
                "ab472f9b460178a2"
            ]
        ]
    },
    {
        "id": "c79ed1b84a742571",
        "type": "debug",
        "z": "760f23939087cb96",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 260,
        "wires": []
    },
    {
        "id": "a21fad02e87d5aa8",
        "type": "OpcUa-Client",
        "z": "760f23939087cb96",
        "endpoint": "77f058b7f8dabfa6",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "10",
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "name": "",
        "x": 1160,
        "y": 140,
        "wires": [
            [
                "1ef5bdfa8f62c7a1"
            ]
        ]
    },
    {
        "id": "d3727b6cd9633b8f",
        "type": "Stackhero-InfluxDB-v2-write",
        "z": "760f23939087cb96",
        "server": "5a8244e6c7c10971",
        "name": "InfluxDBwrite",
        "x": 1050,
        "y": 200,
        "wires": [
            [
                "c79ed1b84a742571"
            ]
        ]
    },
    {
        "id": "24c0e70e64d3ab41",
        "type": "join",
        "z": "760f23939087cb96",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "10",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1415,
        "y": 140,
        "wires": [
            [
                "769db09ab15b6d24"
            ]
        ],
        "l": false
    },
    {
        "id": "1ef5bdfa8f62c7a1",
        "type": "switch",
        "z": "760f23939087cb96",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "ns=3;s=AirConditioner",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1295,
        "y": 140,
        "wires": [
            [
                "53fdf054dc0c9e9f"
            ]
        ],
        "l": false
    },
    {
        "id": "53fdf054dc0c9e9f",
        "type": "function",
        "z": "760f23939087cb96",
        "name": "",
        "func": "let str=\"\";\nlet obj={};\nstr=msg.topic.replace(\"ns=3;s=\",\"\");\nobj.device=str.replace(\".Temperature\",\"\");\nobj.fields={Temperature:msg.payload};\nobj.timestamp=msg.serverTimestamp;\nmsg={};\nmsg.payload=obj;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1355,
        "y": 140,
        "wires": [
            [
                "24c0e70e64d3ab41"
            ]
        ],
        "l": false
    },
    {
        "id": "769db09ab15b6d24",
        "type": "function",
        "z": "760f23939087cb96",
        "name": "msgtoinflux",
        "func": "let datastore=[];\nclass sample {\n  constructor(payload) {\n    this.data={\n        measurement:'Building',\n        tags: {\n            device: payload.device,\n        },\n        fields: payload.fields,\n        timestamp: new Date(payload.timestamp).getTime()\n    }\n  }\n}\nfor (let i=0; i<msg.payload.length;i++){\n    let dataobj=new sample(msg.payload[i]);\n    datastore.push(dataobj.data);\n}\nmsg.payload = {\n    bucket:'firstbucket',\n    precision: 'ms',\n    data:datastore,\n};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 200,
        "wires": [
            [
                "d3727b6cd9633b8f",
                "c79ed1b84a742571"
            ]
        ]
    }
]